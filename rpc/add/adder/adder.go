// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: add.proto

package adder

import (
	"context"

	"bookstore/rpc/add/add"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddReq          = add.AddReq
	AddResp         = add.AddResp
	BatchAddReq     = add.BatchAddReq
	BatchAddResp    = add.BatchAddResp
	Book            = add.Book
	GetBookListReq  = add.GetBookListReq
	GetBookListResp = add.GetBookListResp

	Adder interface {
		Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
		BatchAdd(ctx context.Context, in *BatchAddReq, opts ...grpc.CallOption) (*BatchAddResp, error)
		GetBookList(ctx context.Context, in *GetBookListReq, opts ...grpc.CallOption) (*GetBookListResp, error)
	}

	defaultAdder struct {
		cli zrpc.Client
	}
)

func NewAdder(cli zrpc.Client) Adder {
	return &defaultAdder{
		cli: cli,
	}
}

func (m *defaultAdder) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	client := add.NewAdderClient(m.cli.Conn())
	return client.Add(ctx, in, opts...)
}

func (m *defaultAdder) BatchAdd(ctx context.Context, in *BatchAddReq, opts ...grpc.CallOption) (*BatchAddResp, error) {
	client := add.NewAdderClient(m.cli.Conn())
	return client.BatchAdd(ctx, in, opts...)
}

func (m *defaultAdder) GetBookList(ctx context.Context, in *GetBookListReq, opts ...grpc.CallOption) (*GetBookListResp, error) {
	client := add.NewAdderClient(m.cli.Conn())
	return client.GetBookList(ctx, in, opts...)
}
